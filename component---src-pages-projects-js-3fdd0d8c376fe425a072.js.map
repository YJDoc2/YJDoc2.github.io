{"version":3,"file":"component---src-pages-projects-js-3fdd0d8c376fe425a072.js","mappings":"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","sources":["webpack://gatsby-starter-personal-portfolio/./src/components/physics.js","webpack://gatsby-starter-personal-portfolio/./src/pages/projects.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nexport default class PhysicsBits extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { rand: Math.random() }\n  }\n  componentDidMount() {\n    this.setState({ rand: Math.random() })\n  }\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query physicsDataQuery {\n            allPhysicsbitsJson {\n              nodes {\n                links\n                quote\n              }\n            }\n          }\n        `}\n        render={data => {\n          let quote =\n            data.allPhysicsbitsJson.nodes[\n              Math.floor(this.state.rand * data.allPhysicsbitsJson.nodes.length)\n            ]\n          return (\n            <>\n              <section>{quote.quote}</section>\n              <br></br>\n              {quote.links.length > 0 ? (\n                <section>\n                  To Know a bit more, check :{\" \"}\n                  <ul>\n                    {quote.links.map((l, index) => (\n                      <li>\n                        <a\n                          href={l}\n                          key={index}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {l}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </section>\n              ) : (\n                \"\"\n              )}\n            </>\n          )\n        }}\n      />\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport Seo from \"../components/seo\"\nimport Physics from \"../components/physics\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTerminal, faCode } from \"@fortawesome/free-solid-svg-icons\"\n\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\n\nexport default class ProjectsPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      desc: \"\",\n      lang: \"\",\n      tech: \"\",\n    }\n    props.data.allProjectsJson.nodes.forEach(node => {\n      node.language.forEach(lang => this.langs.add(lang))\n      node.stack.forEach(tech => this.techs.add(tech))\n    })\n\n    this.langs = Array.from(this.langs)\n    this.techs = Array.from(this.techs)\n  }\n\n  techs = new Set()\n  langs = new Set()\n\n  handleDescChange = e => {\n    this.setState({ ...this.state, desc: e.target.value })\n  }\n  handleLangChange = e => {\n    this.setState({ ...this.state, lang: e.target.value })\n  }\n  handleTechChange = e => {\n    this.setState({ ...this.state, tech: e.target.value })\n  }\n\n  filterProjects = data => {\n    let ret = data\n    if (this.state.lang !== \"\") {\n      ret = ret.filter(node => {\n        return node.language.includes(this.state.lang)\n      })\n    }\n    if (this.state.tech !== \"\") {\n      ret = ret.filter(node => {\n        return node.stack.includes(this.state.tech)\n      })\n    }\n    if (this.state.desc !== \"\") {\n      ret = ret.filter(node => {\n        return node.description\n          .toLowerCase()\n          .includes(this.state.desc.toLowerCase())\n      })\n    }\n    return ret\n  }\n\n  render() {\n    let data = this.filterProjects(this.props.data.allProjectsJson.nodes)\n    return (\n      <Layout>\n        <Seo title=\"Projects\" />\n        <section className=\"content\">\n          <div className=\"container\">\n            <div className=\"subsection\">\n              <div className=\"row form-group\">\n                <div className=\"col-lg-6 p-1\">\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    value={this.state.value}\n                    onChange={this.handleDescChange}\n                    placeholder=\"Search by description\"\n                  />\n                </div>\n                <div className=\"col-lg-3 p-1\">\n                  <select\n                    className=\"form-control\"\n                    value={this.state.lang}\n                    onChange={this.handleLangChange}\n                  >\n                    <option value=\"\">Any Language</option>\n                    {this.langs.map((lang, index) => {\n                      return (\n                        <option value={lang} key={index}>\n                          {lang}\n                        </option>\n                      )\n                    })}\n                  </select>\n                </div>\n                <div className=\"col-lg-3 p-1\">\n                  <select\n                    className=\"form-control\"\n                    value={this.state.tech}\n                    onChange={this.handleTechChange}\n                  >\n                    <option value=\"\">Any Techology</option>\n                    {this.techs.map((tech, index) => {\n                      return (\n                        <option value={tech} key={index}>\n                          {tech}\n                        </option>\n                      )\n                    })}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"subsection\">\n              {data.map((node, index) => (\n                <div className=\"card mb-4 px-5 pb-5\" key={index}>\n                  <div className=\"card-body\">\n                    <div className=\"card-title\">\n                      <h3>{node.project}</h3>\n                      <h4>\n                        <FontAwesomeIcon icon={faTerminal} className=\"mr-2\" />\n                        {node.language.reduce((a, b) => {\n                          return a + \" , \" + b\n                        })}\n                      </h4>\n                      <h4>\n                        <FontAwesomeIcon icon={faCode} className=\"mr-2\" />\n                        {node.stack.length\n                          ? node.stack.reduce((a, b) => {\n                              return a + \" , \" + b\n                            })\n                          : \"\"}\n                      </h4>\n                    </div>\n                    <div className=\"card-text\">\n                      <p>{node.description}</p>\n                      {node.links.length > 0 ? \"See In More Detail Here :\" : \"\"}\n                      <br />\n                      <ul>\n                        {node.links.map((link, index) => (\n                          <li>\n                            <a\n                              href={link}\n                              rel=\"noreferrer\"\n                              target=\"_blank\"\n                              key={index}\n                            >\n                              {link}\n                            </a>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              {data.length === 0 ? (\n                <div className=\"card mb-4 px-5 pb-5\">\n                  <div className=\"card-body\">\n                    <div className=\"card-title\">\n                      <h3>Nothing Found!</h3>\n                    </div>\n                    <div className=\"card-text\">\n                      Instead, Here's a Physics bit :\n                      <Physics />\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query ProjectQuery {\n    allProjectsJson {\n      nodes {\n        language\n        links\n        project\n        stack\n        description\n      }\n    }\n  }\n`\n"],"names":["PhysicsBits","props","state","rand","Math","random","componentDidMount","this","setState","render","StaticQuery","query","data","quote","allPhysicsbitsJson","nodes","floor","length","links","map","l","index","href","key","target","rel","Component","ProjectsPage","techs","Set","langs","handleDescChange","e","desc","value","handleLangChange","lang","handleTechChange","tech","filterProjects","ret","filter","node","language","includes","stack","description","toLowerCase","allProjectsJson","forEach","add","Array","from","title","className","type","onChange","placeholder","project","icon","faTerminal","reduce","a","b","faCode","link"],"sourceRoot":""}