{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/physics.js"],"names":["AboutPage","title","className","role","aria-label","href","target","rel","to","PhysicsBits","props","state","rand","Math","random","componentDidMount","this","setState","render","query","data","quote","allPhysicsbitsJson","nodes","floor","length","links","map","l","index","key","Component"],"mappings":"6FAAA,gFAqKeA,UA/JG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,UACX,6BAASC,UAAU,SACjB,yBAAKA,UAAU,aAEb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,uCACb,wCAKJ,yBAAKA,UAAU,mCAEb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,wCAEE,0BAAMC,KAAK,MAAMC,aAAW,cAA5B,OAIF,iDAGF,yBAAKF,UAAU,aAAf,0RAaN,yBAAKA,UAAU,4BACb,8BAKF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,6CACA,iDAGF,yBAAKA,UAAU,aACb,+CADF,QACgC,IAC9B,uBACEG,KAAK,8CACLC,OAAO,SACPC,IAAI,cAHN,aAMK,IARP,4EAWE,4BACE,+CACA,6CACA,sCACA,wCACA,2CAhBJ,kCAkBkC,IAChC,uBACEF,KAAK,4BACLC,OAAO,UACPC,IAAI,cAHN,UAMK,IAzBP,8BA0B6B,kBAAC,OAAD,CAAMC,GAAG,aAAT,YAQnC,yBAAKN,UAAU,4BACb,8BAKF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,+CACA,2DAGF,yBAAKA,UAAU,aAAf,sDACsD,IACpD,gCACE,uBACEG,KAAK,wBACLC,OAAO,SACPC,IAAI,cAHN,YAHJ,+IAcE,6BAdF,gDAcsD,IACpD,uBACEF,KAAK,2BACLC,OAAO,SACPC,IAAI,cAHN,SAOA,iCAQR,yBAAKL,UAAU,4BACb,8BAKF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,wCACA,6CAGF,yBAAKA,UAAU,aACb,kBAAC,IAAD,gB,qHCvJGO,E,YACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,KAAMC,KAAKC,UAFT,E,4CAInBC,kBAAA,WACEC,KAAKC,SAAS,CAAEL,KAAMC,KAAKC,Y,EAE7BI,OAAA,WAAU,IAAD,OACP,OACE,kBAAC,cAAD,CACEC,MAAK,YAULD,OAAQ,SAAAE,GACN,IAAIC,EACFD,EAAKE,mBAAmBC,MACtBV,KAAKW,MAAM,EAAKb,MAAMC,KAAOQ,EAAKE,mBAAmBC,MAAME,SAE/D,OACE,oCACE,iCAAUJ,EAAMA,OAChB,6BACCA,EAAMK,MAAMD,OAAS,EACpB,+DAC8B,IAC5B,4BACGJ,EAAMK,MAAMC,KAAI,SAACC,EAAGC,GAAJ,OACf,4BACE,uBACExB,KAAMuB,EACNE,IAAKD,EACLvB,OAAO,SACPC,IAAI,cAEHqB,SAOX,Q,GAjDyBG","file":"component---src-pages-about-js-7e933baaa85209e195ff.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport Physics from \"../components/physics\"\nimport Layout from \"../components/layout\"\nimport { Link } from \"gatsby\"\n\nconst AboutPage = () => (\n  <Layout>\n    <SEO title=\"About\" />\n    <section className=\"about\">\n      <div className=\"container\">\n        {/* + Title */}\n        <div className=\"row mt-4 justify-content-center\">\n          <div className=\"col-lg-7 col-sm-12 my-auto headline\">\n            <h1>Hello~</h1>\n          </div>\n        </div>\n        {/* - Title */}\n\n        <div className=\"row my-4 justify-content-center\">\n          {/* + Card */}\n          <div className=\"col-lg-7 my-auto\">\n            <div className=\"card shadow-sm\">\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  <h2>\n                    Hi there!\n                    <span role=\"img\" aria-label=\"Happy face\">\n                      ðŸ˜Š\n                    </span>\n                  </h2>\n                  <h3>Hope You're Well</h3>\n                </div>\n\n                <div className=\"card-text\">\n                  I am Yashodhan Joshi, a curious student currently learning\n                  Computer engineering. I hope to do something that will connect\n                  both, my knowledge of computers and my love of physics. I am\n                  am particularly fascinated by Operating Systems, Compilers and\n                  Theory of General Relativity.\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* - Card */}\n\n          {/* Break */}\n          <div className=\"col-lg-6 my-auto mx-auto\">\n            <br />\n          </div>\n          {/* Break */}\n\n          {/* + Card */}\n          <div className=\"col-lg-7 my-auto\">\n            <div className=\"card shadow-sm\">\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  <h2>More about me</h2>\n                  <h3>What's your core</h3>\n                </div>\n\n                <div className=\"card-text\">\n                  <em>Taking a slide </em> from{\" \"}\n                  <a\n                    href=\"https://www.youtube.com/watch?v=2wZ1pCpJUIM\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    this talk\n                  </a>{\" \"}\n                  I would say that the core values I try to build in the code I\n                  write are :\n                  <ul>\n                    <li>Maintainability</li>\n                    <li>Debuggability</li>\n                    <li>Safety</li>\n                    <li>Security</li>\n                    <li>Simplicity</li>\n                  </ul>\n                  You can check my projects on my{\" \"}\n                  <a\n                    href=\"https://github.com/YJDoc2\"\n                    target=\"_blanck\"\n                    rel=\"noreferrer\"\n                  >\n                    Github\n                  </a>{\" \"}\n                  or see a short description <Link to=\"/projects\">Here</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* - Card */}\n\n          {/* Break */}\n          <div className=\"col-lg-6 my-auto mx-auto\">\n            <br />\n          </div>\n          {/* Break */}\n\n          {/* + Card */}\n          <div className=\"col-lg-7 my-auto\">\n            <div className=\"card shadow-sm\">\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  <h2>What else I do?</h2>\n                  <h3>Some things here and there</h3>\n                </div>\n\n                <div className=\"card-text\">\n                  I have been a part of a committee from my Collage :{\" \"}\n                  <strong>\n                    <a\n                      href=\"https://djunicode.in/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      Unicode\n                    </a>\n                  </strong>\n                  . I have contributed in creating few projects, and also have\n                  mentored my juniors, helping them learn web development and\n                  other technologies.\n                  <br />I also write blogs on Dev, you can check them{\" \"}\n                  <a\n                    href=\"http://www.dev.to/yjdoc2\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    here.\n                  </a>\n                  <br />\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* - Card */}\n\n          {/* Break */}\n          <div className=\"col-lg-6 my-auto mx-auto\">\n            <br />\n          </div>\n          {/* Break */}\n\n          {/* + Card */}\n          <div className=\"col-lg-7 my-auto\">\n            <div className=\"card shadow-sm\">\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  <h2>Physics!</h2>\n                  <h3>It's Amazing</h3>\n                </div>\n\n                <div className=\"card-text\">\n                  <Physics />\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* - Card */}\n        </div>\n      </div>\n    </section>\n  </Layout>\n)\nexport default AboutPage\n","import React, { Component } from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nexport default class PhysicsBits extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { rand: Math.random() }\n  }\n  componentDidMount() {\n    this.setState({ rand: Math.random() })\n  }\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query physicsDataQuery {\n            allPhysicsbitsJson {\n              nodes {\n                links\n                quote\n              }\n            }\n          }\n        `}\n        render={data => {\n          let quote =\n            data.allPhysicsbitsJson.nodes[\n              Math.floor(this.state.rand * data.allPhysicsbitsJson.nodes.length)\n            ]\n          return (\n            <>\n              <section>{quote.quote}</section>\n              <br></br>\n              {quote.links.length > 0 ? (\n                <section>\n                  To Know a bit more, check :{\" \"}\n                  <ul>\n                    {quote.links.map((l, index) => (\n                      <li>\n                        <a\n                          href={l}\n                          key={index}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {l}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </section>\n              ) : (\n                \"\"\n              )}\n            </>\n          )\n        }}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}