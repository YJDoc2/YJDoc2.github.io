{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/physics.js"],"names":["ProjectsPage","props","techs","Set","langs","handleDescChange","e","setState","state","desc","target","value","handleLangChange","lang","handleTechChange","tech","filterProjects","data","ret","filter","node","language","includes","stack","description","toLowerCase","allProjectsJson","nodes","forEach","add","Array","from","render","this","title","className","type","onChange","placeholder","map","index","key","project","icon","faTerminal","reduce","a","b","faCode","links","length","link","href","Component","query","PhysicsBits","rand","Math","random","componentDidMount","quote","allPhysicsbitsJson","floor","l","rel"],"mappings":"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","file":"component---src-pages-projects-js-853de86795fe0e8b0085.js","sourcesContent":["import React, { Component } from \"react\"\nimport SEO from \"../components/seo\"\nimport Physics from \"../components/physics\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTerminal, faCode } from \"@fortawesome/free-solid-svg-icons\"\n\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\n\nexport default class ProjectsPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      desc: \"\",\n      lang: \"\",\n      tech: \"\",\n    }\n    props.data.allProjectsJson.nodes.forEach(node => {\n      node.language.forEach(lang => this.langs.add(lang))\n      node.stack.forEach(tech => this.techs.add(tech))\n    })\n\n    this.langs = Array.from(this.langs)\n    this.techs = Array.from(this.techs)\n  }\n\n  techs = new Set()\n  langs = new Set()\n\n  handleDescChange = e => {\n    this.setState({ ...this.state, desc: e.target.value })\n  }\n  handleLangChange = e => {\n    this.setState({ ...this.state, lang: e.target.value })\n  }\n  handleTechChange = e => {\n    this.setState({ ...this.state, tech: e.target.value })\n  }\n\n  filterProjects = data => {\n    let ret = data\n    if (this.state.lang !== \"\") {\n      ret = ret.filter(node => {\n        return node.language.includes(this.state.lang)\n      })\n    }\n    if (this.state.tech !== \"\") {\n      ret = ret.filter(node => {\n        return node.stack.includes(this.state.tech)\n      })\n    }\n    if (this.state.desc !== \"\") {\n      ret = ret.filter(node => {\n        return node.description\n          .toLowerCase()\n          .includes(this.state.desc.toLowerCase())\n      })\n    }\n    return ret\n  }\n\n  render() {\n    let data = this.filterProjects(this.props.data.allProjectsJson.nodes)\n    return (\n      <Layout>\n        <SEO title=\"Projects\" />\n        <section className=\"content\">\n          <div className=\"container\">\n            <div className=\"subsection\">\n              <div className=\"row form-group\">\n                <div className=\"col-lg-6 p-1\">\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    value={this.state.value}\n                    onChange={this.handleDescChange}\n                    placeholder=\"Search by description\"\n                  />\n                </div>\n                <div className=\"col-lg-3 p-1\">\n                  <select\n                    className=\"form-control\"\n                    value={this.state.lang}\n                    onChange={this.handleLangChange}\n                  >\n                    <option value=\"\">Any Language</option>\n                    {this.langs.map((lang, index) => {\n                      return (\n                        <option value={lang} key={index}>\n                          {lang}\n                        </option>\n                      )\n                    })}\n                  </select>\n                </div>\n                <div className=\"col-lg-3 p-1\">\n                  <select\n                    className=\"form-control\"\n                    value={this.state.tech}\n                    onChange={this.handleTechChange}\n                  >\n                    <option value=\"\">Any Techology</option>\n                    {this.techs.map((tech, index) => {\n                      return (\n                        <option value={tech} key={index}>\n                          {tech}\n                        </option>\n                      )\n                    })}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"subsection\">\n              {data.map((node, index) => (\n                <div className=\"card mb-4 px-5 pb-5\" key={index}>\n                  <div className=\"card-body\">\n                    <div className=\"card-title\">\n                      <h3>{node.project}</h3>\n                      <h4>\n                        <FontAwesomeIcon icon={faTerminal} className=\"mr-2\" />\n                        {node.language.reduce((a, b) => {\n                          return a + \" , \" + b\n                        })}\n                      </h4>\n                      <h4>\n                        <FontAwesomeIcon icon={faCode} className=\"mr-2\" />\n                        {node.stack.reduce((a, b) => {\n                          return a + \" , \" + b\n                        })}\n                      </h4>\n                    </div>\n                    <div className=\"card-text\">\n                      <p>{node.description}</p>\n                      {node.links.length > 0 ? \"See In More Detail Here :\" : \"\"}\n                      <br />\n                      {node.links.map((link, index) => (\n                        <a href={link} key={index}>\n                          {link}\n                        </a>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              ))}\n              {data.length === 0 ? (\n                <div className=\"card mb-4 px-5 pb-5\">\n                  <div className=\"card-body\">\n                    <div className=\"card-title\">\n                      <h3>Nothing Found!</h3>\n                    </div>\n                    <div className=\"card-text\">\n                      Instead, Here's a Physics bit :\n                      <Physics />\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query ProjectQuery {\n    allProjectsJson {\n      nodes {\n        language\n        links\n        project\n        stack\n        description\n      }\n    }\n  }\n`\n","import React, { Component } from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nexport default class PhysicsBits extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { rand: Math.random() }\n  }\n  componentDidMount() {\n    this.setState({ rand: Math.random() })\n  }\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query physicsDataQuery {\n            allPhysicsbitsJson {\n              nodes {\n                links\n                quote\n              }\n            }\n          }\n        `}\n        render={data => {\n          let quote =\n            data.allPhysicsbitsJson.nodes[\n              Math.floor(this.state.rand * data.allPhysicsbitsJson.nodes.length)\n            ]\n          return (\n            <>\n              <section>{quote.quote}</section>\n              <br></br>\n              {quote.links.length > 0 ? (\n                <section>\n                  To Know a bit more, check :{\" \"}\n                  <ul>\n                    {quote.links.map((l, index) => (\n                      <li>\n                        <a\n                          href={l}\n                          key={index}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {l}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </section>\n              ) : (\n                \"\"\n              )}\n            </>\n          )\n        }}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}